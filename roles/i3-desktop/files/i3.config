# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# the following seems really experimental and crashes when used incorrectly, yay!
#fake-outputs 2160+0+1080,1920x2160+1920+0

set $mod Mod4

# color defs
set $black    #002B36
set $white    #839496
set $gray     #CCCCCC
set $darkgray #666666
set $green    #799F26
set $blue     #4D73AA
set $purple   #8473A7
set $red      #f55900
set $orange   #E59847
set $cyan     #2AA198
set $dark     #00252E
set $light    #bbaaaa

# look&feel
font pango: Liberation Sans 10
#                       border  bg      text    indicator child_border
client.focused          $green  $green  $dark   $red      $green
client.unfocused        $black  $black  $white  $white    $black
client.focused_inactive $white  $white  $dark   $orange   $white
client.urgent           $orange $orange $dark   $purple   $orange
client.background       $black

default_border normal 2
new_float normal

# general
floating_modifier $mod
workspace_layout tabbed
hide_edge_borders smart
# do not go outside of a container when changing focus (thus, one needs to use focus child/parent)
# ... in effect won't wrap between screens :)
force_focus_wrapping yes
workspace_auto_back_and_forth yes
focus_on_window_activation focus

bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# containers
bindsym $mod+Shift+q kill

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+q focus parent
bindsym $mod+a focus child

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+v split toggle

bindsym $mod+f fullscreen toggle

bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle

# scratchpad
bindsym $mod+grave scratchpad show
bindsym $mod+Shift+grave move scratchpad

bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

bindsym $mod+z workspace back_and_forth

bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# screens
bindsym $mod+Shift+Control+h move workspace to output left
bindsym $mod+Shift+Control+j move workspace to output down
bindsym $mod+Shift+Control+k move workspace to output up
bindsym $mod+Shift+Control+l move workspace to output right


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bar {
	status_command py3status
	position bottom
	separator_symbol " · "
	font pango: Liberation Sans 10
	tray_output primary
	colors {
		statusline $white
		background $black
		#border             border  bg      text
		focused_workspace   $white  $white  $black
		active_workspace    $white  $black  $white
		inactive_workspace  $black  $black  $white
		urgent_workspace    $red    $red    $black
		binding_mode        $black  $red    $black
	}
}

# title rewrite
for_window [class=".*"] \
	title_format "%class <b>%title</b>"
for_window [class="Emacs"] \
	title_format "<span foreground='#00ff00'>E</span> <b>%title</b>"
for_window [class="(Firefox|Chromium-browser)"] \
	title_format "<span foreground='#ffcc00'>F</span> <b>%title</b>"
for_window [class="(Tilix|Terminator|Xfce4-terminal|Gnome-terminal)"] \
	title_format "<span foreground='#ff8888'>T</span> <b>%title</b>"
for_window [class="(Google-chrome)"] \
	title_format "<span foreground='#cc0099'>G</span> <b>%title</b>"

# in the following, note the ' and " when expanding elsewhere
set $dmenuParams -fn "Liberation Sans:medium:pixelsize=17" -l 5 -i

set $mymenu <span font_style='normal'>MyMenu ::: <b>d</b>isplay, <b>e</b>macsclient, <b>x</b>init.sh</span>
mode --pango_markup "$mymenu" {
	bindsym d exec dir -1 ~/.screenlayout | dmenu $dmenuParams | xargs sh && xrandr-hooks.sh ; mode "default"
	bindsym e exec --no-startup-id emacsclient --no-wait -c || notify-send 'emacsclient' 'problem running it' ; mode "default"
	bindsym x exec --no-startup-id ~/bin/xinit.sh ; mode "default"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+x mode "$mymenu"

# launchers
bindsym $mod+d exec dmenu_run $dmenuParams
bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu $dmenuParams'
bindsym $mod+Return exec tilix --action=app-new-window
bindsym $mod+Shift+Return exec xterm
bindsym $mod+Escape exec xset s activate
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- && killall -SIGUSR1 py3status
bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ && killall -SIGUSR1 py3status
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle && killall -SIGUSR1 py3status
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 -time 0 && killall -SIGUSR1 py3status
bindsym XF86MonBrightnessDown exec xbacklight -dec 6 -time 0 && xbacklight -inc 1 -time 0 && killall -SIGUSR1 py3status
bindsym $mod+Prior exec xbacklight -inc 5 -time 0 && killall -SIGUSR1 py3status
bindsym $mod+Next exec xbacklight -dec 6 -time 0 && xbacklight -inc 1 -time 0 && killall -SIGUSR1 py3status
bindsym XF86AudioPlay exec playerctl -p spotify play-pause
bindsym XF86AudioPrev exec playerctl -p spotify previous
bindsym XF86AudioNext exec playerctl -p spotify next

bindsym F12 focus right
bindsym $mod+F11 focus output left
bindsym $mod+F12 focus output right

bindsym Print exec "test \\"$(i3-msg -t get_workspaces | jq '.[] | select(.focused) | .num')\\" = 1 && i3-msg 'workspace number 2' || i3-msg 'workspace number 1'"
bindsym Shift+Print exec "test \\"$(i3-msg -t get_workspaces | jq '.[] | select(.focused) | .num')\\" = 3 && i3-msg 'workspace number 4' || i3-msg 'workspace number 3'"
bindsym Menu exec "test \\"$(i3-msg -t get_workspaces | jq '.[] | select(.focused) | .num')\\" = 1 && i3-msg 'workspace number 2' || i3-msg 'workspace number 1'"
bindsym Shift+Menu exec "test \\"$(i3-msg -t get_workspaces | jq '.[] | select(.focused) | .num')\\" = 3 && i3-msg 'workspace number 4' || i3-msg 'workspace number 3'"

# startup
exec --no-startup-id xss-lock -v -n "notify-send -u critical -t 10000 -- 'Screen saver imminent.'" -- i3lock -n -e -f -c 000000 || sh -c 'echo xss-lock >> ~/k-errors'
exec --no-startup-id dunst || sh -c 'echo dunst >> ~/k-errors'
exec --no-startup-id ~/opt/dunst-i3lock-tracker.sh || sh -c 'echo dunst-i3lock-tracker.sh >> ~/k-errors'
exec --no-startup-id redhsift-gtk
exec --no-startup-id nm-applet
exec --no-startup-id nohup emacs --daemon
exec --no-startup-id compton
exec --no-startup-id ~/bin/xinit.sh
exec --no-startup-id ~/bin/startup.sh
